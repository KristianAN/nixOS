{ pkgs, ... }:
let
  metalsVersion = "1.5.1";
  metals = pkgs.metals.overrideAttrs (
    final: prev: {
      deps = pkgs.stdenv.mkDerivation {
        name = "${prev.pname}-deps-${metalsVersion}";
        buildCommand = ''
          export COURSIER_CACHE=$(pwd)
          ${pkgs.pkgs.coursier}/bin/cs fetch org.scalameta:metals_2.13:${metalsVersion} \
            -r bintray:scalacenter/releases \
            -r sonatype:snapshots > deps
          mkdir -p $out/share/java
          cp $(< deps) $out/share/java/
        '';
        outputHashMode = "recursive";
        outputHashAlgo = "sha256";
        outputHash = "sha256-2FA2B/WzNGU4B785pn5zZ9Xj64huzbSbr2Or+CxUMlI=";
      };
      buildInputs = [ final.deps ];
    }
  );
in
{
  programs.emacs = {
    enable = true;
    package = pkgs.emacs-pgtk;
    extraPackages =
      epkgs: with epkgs; [
        # Meow!
        meow

        # Native compilation
        # compile-angel

        # Completion et.al.
        orderless
        vertico
        marginalia
        embark
        embark-consult
        consult
        corfu
        cape
        yasnippet
        wgrep

        # Good looks
        nerd-icons
        indent-bars
        ef-themes
        vim-tab-bar
        mood-line
        nerd-icons-completion
        nerd-icons-corfu

        # Direnv
        envrc

        # Git
        magit
        forge
        git-gutter-fringe
        fringe-helper
        git-gutter

        # Programming
        treesit-grammars.with-all-grammars
        scala-ts-mode
        nix-ts-mode
        web-mode
        fsharp-mode
        haskell-ts-mode

        # Editing
        markdown-mode
        iedit
        apheleia # Formatting

        # Other
        eat
        org-roam
        org-roam-ui
        org-modern
        tabspaces
        detached
        dashboard

        (lsp-mode.overrideAttrs (p: {
          buildPhase = ''
              export LSP_USE_PLISTS=true;
            '' + p.buildPhase;
        }))
        lsp-haskell
        lsp-ui
      ];

    extraConfig = builtins.readFile ./init.el;
  };

  home.packages = [
    pkgs.emacs-lsp-booster
    pkgs.jdt-language-server
    metals
    pkgs.scalafmt
    pkgs.astyle
    pkgs.fd
    pkgs.fsautocomplete
    pkgs.dtach
  ];

  home.file = {
    ".emacs.d" = {
      source = ./.;
      recursive = true;
    };
    
    ".emacs.d/nix-config.el".text = ''
     ;; Generated by Home Manager - Do not edit directly
    '';
  };

  services.emacs.enable = true;

}
